==17568== Memcheck, a memory error detector
==17568== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==17568== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==17568== Command: ./main ./data/data 1
==17568== Parent PID: 12007
==17568== 
==17568== Invalid read of size 4
==17568==    at 0x402F11: colour(double**, unsigned int, unsigned int, double) (in /home/k1337383/Documents/WPT/main)
==17568==    by 0x401815: main (in /home/k1337383/Documents/WPT/main)
==17568==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==17568== 
==17568== 
==17568== Process terminating with default action of signal 11 (SIGSEGV)
==17568==  Access not within mapped region at address 0x0
==17568==    at 0x402F11: colour(double**, unsigned int, unsigned int, double) (in /home/k1337383/Documents/WPT/main)
==17568==    by 0x401815: main (in /home/k1337383/Documents/WPT/main)
==17568==  If you believe this happened as a result of a stack
==17568==  overflow in your program's main thread (unlikely but
==17568==  possible), you can try to increase the size of the
==17568==  main thread stack using the --main-stacksize= flag.
==17568==  The main thread stack size used in this run was 8388608.
==17568== 
==17568== HEAP SUMMARY:
==17568==     in use at exit: 950 bytes in 22 blocks
==17568==   total heap usage: 109 allocs, 87 frees, 22,889 bytes allocated
==17568== 
==17568== LEAK SUMMARY:
==17568==    definitely lost: 0 bytes in 0 blocks
==17568==    indirectly lost: 0 bytes in 0 blocks
==17568==      possibly lost: 102 bytes in 2 blocks
==17568==    still reachable: 848 bytes in 20 blocks
==17568==         suppressed: 0 bytes in 0 blocks
==17568== Rerun with --leak-check=full to see details of leaked memory
==17568== 
==17568== For counts of detected and suppressed errors, rerun with: -v
==17568== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 1 from 1)
